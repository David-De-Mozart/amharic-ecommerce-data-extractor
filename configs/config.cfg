[paths]
train = "data/labeled/spacy/train.spacy"
dev = "data/labeled/spacy/dev.spacy"
vectors = null
init_tok2vec = null

[system]
gpu_allocator = "pytorch"
seed = 0

[nlp]
lang = "am"
pipeline = ["transformer","ner"]
batch_size = 4

[components]

[components.ner]
factory = "ner"

[components.transformer]
factory = "transformer"
max_batch_items = 4096

[components.transformer.model]
@architectures = "spacy-transformers.TransformerModel.v3"
name = "Davlan/afro-xlmr-base"
tokenizer_config = {"use_fast": true}

[components.ner.model]
@architectures = "spacy.TransitionBasedParser.v2"
state_type = "ner"
extra_state_tokens = false
hidden_width = 64
maxout_pieces = 2
use_upper = true
nO = null

[components.ner.model.tok2vec]
@architectures = "spacy-transformers.TransformerListener.v1"
grad_factor = 1.0
pooling = {"@layers": "reduce_mean.v1"}
upstream = "transformer"

[training]
accumulate_gradient = 1
dev_corpus = "corpora.dev"
train_corpus = "corpora.train"
seed = 0
gpu_allocator = "pytorch"
dropout = 0.1
max_epochs = 30
patience = 3

[training.optimizer]
@optimizers = "Adam.v1"
beta1 = 0.9
beta2 = 0.999
L2_is_weight_decay = true
L2 = 0.01
grad_clip = 1.0
use_averages = false

[training.batcher]
@batchers = "spacy.batch_by_words.v1"
discard_oversize = true
tolerance = 0.2
size = 1000

[training.logger]
@loggers = "wandb"
project_name = "amharic-ner"
remove_config_values = ["paths.train", "paths.dev", "paths.vectors"]